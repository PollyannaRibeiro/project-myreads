{"version":3,"sources":["BooksAPI.js","ListBooks.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","ListBooks","state","query","searchBooks","error","updateQuery","_this","setState","trim","clearInterval","time","setTimeout","searchingBook","_this2","this","fetch","concat","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","data","books","BooksAPI","result","Array","isArray","forEach","book","checkBooksInApp","console","log","length","elem","filtering","props","filter","id","shelf","filteringElem","bookApp","push","onMove","_this3","showingBooks","react_default","a","createElement","className","Link","to","type","placeholder","value","onChange","event","target","map","key","style","width","height","backgroundImage","imageLinks","smallThumbnail","e","updateBook","disabled","title","authors","categories","Component","App","shelves","Route","exact","path","render","_ref","history","src_ListBooks","moveBook","ReactDOM","BrowserRouter","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.fe8205d9.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport * as BooksAPI from './BooksAPI'\n\nclass ListBooks extends Component {\n\n    static propTypes = {\n         books: PropTypes.array.isRequired,\n         onMove: PropTypes.func.isRequired\n    }\n\n    state = {\n        query: '',\n        searchBooks:[],\n        error: false\n    }\n    \n    // wait for a half second until having no keystroke press to search\n    time;\n    updateQuery = (query) =>{\n        this.setState({query: query.trim(), searchBooks:[]})\n        clearInterval(this.time)\n        this.time = setTimeout(()=>{\n            this.searchingBook(query)\n        }, 500) \n    }\n\n    // searchingBook checks if an array will return from the BookAPI, if not, it will show an error screen \"\u001cnot found\"\n    searchingBook(query){\n        BooksAPI.search(this.state.query).then((result) => {\n            if (Array.isArray(result)){\n                result.forEach((book)=>this.checkBooksInApp(book))\n                this.state.error = false\n                this.state.searchBooks = result\n                this.setState(this.state)\n                console.log(result)\n            } else {\n                if(this.state.query.length > 0){\n                    this.state.error = true;\n                } else {\n                    this.state.error = false;\n                }\n                this.setState(this.state)\n            }                \n        })\n    }\n\n    // compares if the searched books already exist in app page and get the current shelf\n    checkBooksInApp(elem){\n        let filtering = this.props.books.filter((book)=> book.id === elem.id)\n        if(filtering.length>0 ){\n            elem.shelf = filtering[0].shelf\n        }\n    }\n\n    // when choosing a select option in the search screen it updates books in the app page \n    //(push the new book to the app array book) and compares if the shelves are identical in both pages\n    updateBook(shelf, book) {\n        let filteringElem = this.props.books.filter((bookApp)=> bookApp.id = book.id)\n        if(filteringElem.length>0){\n            book.shelf = filteringElem[0].shelf;\n        }\n        if(book.shelf!== 'none'){\n            this.props.books.push(book)\n        }\n        this.props.onMove(shelf, book)\n    }\n\n    render(){\n    \n        let showingBooks = this.state.searchBooks\n        \n        return(\n            <div>\n                <div className='search-books-bar'>\n                    <Link to='/' className=\"close-search\">Close</Link>\n                    <div className='search-books-input-wrapper'>\n                        <input \n                        type=\"text\" \n                        placeholder=\"Search by title or author\" \n                        value={this.state.query}\n                        onChange={(event) => this.updateQuery(event.target.value)}/>\n                    </div>\n                </div>  \n\n                {/* error screen */}\n                {this.state.error === true && \n                    <div className='error-warning'>No Results found</div>\n                }\n                \n                <div className=\"search-books-results\">\n                    <ol className='books-grid'>\n                        {showingBooks.map((book)=>(\n                            <li key={book.id}>\n                                <div className=\"book\">\n                                    <div className=\"book-top\">\n                                    <div className=\"book-cover\" \n                                        style={{ width: 128, height: 174, \n                                        backgroundImage:`url(${(book.imageLinks.smallThumbnail ? book.imageLinks.smallThumbnail : '')})`}}></div>\n                                    <div className=\"book-shelf-changer\">\n                                        <select value= {(book.shelf ? book.shelf : 'none')} onChange={e=>this.updateBook(e.target.value, book)}>\n                                        <option value=\"move\" disabled>Move to...</option>\n                                        <option value=\"currentlyReading\">Currently Reading</option>\n                                        <option value=\"wantToRead\">Want to Read</option>\n                                        <option value=\"read\">Read</option>\n                                        <option value=\"none\">None</option>\n                                        </select>\n                                    </div>\n                                    </div>\n                                    <div className=\"book-title\">{book.title}</div>\n                                    <div className=\"book-authors\">{book.authors}</div>\n                                    <div className=\"book-category\">{book.categories}</div>\n                                </div>\n                            </li>\n                        ))}\n                    </ol>\n                </div>   \n            </div>       \n        )\n    }\n}\n\nexport default ListBooks","import React, {Component} from 'react'\nimport { Route } from 'react-router-dom'\nimport { Link } from 'react-router-dom'\n// import * as BooksAPI from './BooksAPI'\nimport './App.css'\nimport * as BooksAPI from './BooksAPI'\nimport ListBooks from './ListBooks'\n\n\nclass App extends Component {\n  \n  shelves = [\n    { \n      title:\"Currently Reading\", \n      value: \"currentlyReading\"\n    },\n    {\n      title:\"Want to Read\", \n      value: \"wantToRead\" \n    },\n    {\n      title:\"Read\", \n      value: \"read\" \n    }\n  ]\n  \n  state = {\n    books: [ ]\n  }\n\n  componentDidMount(){\n    BooksAPI.getAll().then((books)=>{\n      this.setState({books: books})\n    });\n  }\n  \n  moveBook(shelf, book){\n    book.shelf = shelf;\n    BooksAPI.update(book, shelf)\n    this.setState(this.state)\n  }\n\n  // Array<T>.filter(func: (T)=> Bool ): Array<T>\n\n  // Array<T>.map(func: (T)=>K ): Array<K>\n\n  // Array<T>.push(k): number\n\n  // Array<T>.forEach(func:(T) => void): void\n\n  // (method) Array<any>.map<JSX.Element>(callbackfn: (value: any, index: number, array: any[]) => JSX.Element, thisArg?: any): JSX.Element[]\n\n  render() {\n    \n    return (\n      <div className=\"app\">\n        <Route exact path = '/search' render={({history}) =>(\n          <div className=\"search-books\">\n              <ListBooks \n                books={this.state.books}\n                onMove={(shelf, book) => this.moveBook(shelf, book)}\n              />   \n          </div>          \n        )}/>\n        \n        <Route exact path = '/' render = {() => (\n          <div className=\"list-books\">\n            <div className=\"list-books-title\">\n              <h1>MyReads</h1>\n            </div>\n            <div className=\"list-books-content\">\n              <div>\n                {this.shelves.map((shelf) => (\n                  <div className=\"bookshelf\" key={shelf.value}>\n                  <h2 className=\"bookshelf-title\">{shelf.title}</h2>\n                  <div className=\"bookshelf-books\">\n                    <ol className=\"books-grid\">\n                      {this.state.books.filter(book=> book.shelf === shelf.value).map((book)=>(\n                        <li key={book.id}>\n                          <div className=\"book\">\n                            <div className=\"book-top\">\n                            <div className=\"book-cover\" style={{ width: 128, height: 174, backgroundImage:`url(${book.imageLinks.smallThumbnail})`}}></div>\n                            <div className=\"book-shelf-changer\">\n                              <select value= {book.shelf} onChange={e=>this.moveBook(e.target.value, book)}>\n                              <option value=\"move\" disabled>Move to...</option>\n                              <option value=\"currentlyReading\">Currently Reading</option>\n                              <option value=\"wantToRead\">Want to Read</option>\n                              <option value=\"read\">Read</option>\n                              <option value=\"none\">None</option>\n                              </select>\n                            </div>\n                            </div>\n                            <div className=\"book-title\">{book.title}</div>\n                            <div className=\"book-authors\">{book.authors}</div>\n                            <div className=\"book-category\">{book.categories}</div>\n                          </div>\n                        </li>\n                      ))}      \n                    </ol>\n                  </div>\n                  </div>\n                ))}               \n              </div>\n            </div>\n            <div className=\"open-search\">\n              <Link to='/search'>Add a book</Link>\n            </div>\n          </div>\n        )}/>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n    <BrowserRouter><App/></BrowserRouter>, \n    document.getElementById('root'));\n"],"sourceRoot":""}